// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bds_site_web_version7_.Models;

#nullable disable

namespace bds_site_web_version7_.Migrations
{
    [DbContext(typeof(SiteWebBdsDbContext))]
    [Migration("20240207133515_pro")]
    partial class pro
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Actualite", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_Actualite");

                    b.Property<string>("CheminMediaActualite")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("chemin_media_actualite");

                    b.Property<string>("DescriptionActualite")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description_actualite");

                    b.Property<string>("LibelleActualite")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("libelle_actualite");

                    b.Property<string>("NomPageActualite")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nompage_Actualite");

                    b.Property<DateTime>("dateCreation")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("actualite", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.AnnonceRecrutement", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_Annonce_Recrutement");

                    b.Property<DateTime>("DateLimiteAnnonceRecrutement")
                        .HasColumnType("date")
                        .HasColumnName("date_limite_annonce_recrutement");

                    b.Property<string>("DescriptionAnnonceRecrutement")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("description_annonce_recrutement");

                    b.Property<string>("LibelleAnnonceRecrutement")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("libelle_Annonce_recrutement");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("annonce_recrutement", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Chiffre", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Id_chiffre");

                    b.Property<string>("AnneeExperience")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("AnneeExperience");

                    b.Property<string>("NombreEntreprisePartenaires")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreProjetsRealises")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("NombreProjetsRealises");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("chiffre", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Consulter", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DateConsulter")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EbooksId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdConsulter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdUser")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsersId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EbooksId");

                    b.HasIndex("UsersId");

                    b.ToTable("Consulters");
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.DemandeEmploi", b =>
                {
                    b.Property<string>("EmploiId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DateEnvoiDemandeEmploi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MessageDemandeEmploi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomCvDemandeEmploi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ObjetMessageEmploi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EmploiId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("DemandeEmplois");
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.DemandeStage", b =>
                {
                    b.Property<string>("StageId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DateEnvoiDemandeStage")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescriptionMessage")
                        .HasColumnType("longtext");

                    b.Property<string>("NomCvDemandeStage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ObjetMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("StageId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("DemandeStages");
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Ebook", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_Ebook");

                    b.Property<string>("CheminEbook")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("chemin_Ebook");

                    b.Property<DateTime>("DateCreationEbook")
                        .HasColumnType("date")
                        .HasColumnName("date_creation_Ebook");

                    b.Property<string>("ExtensionEbook")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("extension_Ebook");

                    b.Property<string>("NomEbook")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nom_Ebook");

                    b.Property<string>("TailleEbook")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("taille_Ebook");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("ebook", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Emploi", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_Emploi");

                    b.Property<string>("DomaineEmploi")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("domaine_Emploi");

                    b.Property<string>("IdTypeEmploi")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TypeEmploi")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("type_emploi");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("IdTypeEmploi");

                    b.ToTable("Emploi", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.FormationTermine", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_formation");

                    b.Property<string>("Annee")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("Annee");

                    b.Property<string>("CheminImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CheminImage");

                    b.Property<string>("CompetenceAcquise")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CompetenceAcquise");

                    b.Property<string>("IntituleFormation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IntituleFormation");

                    b.Property<string>("ObjectifVise")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PartenaireTechnique")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("partenaireTechnique");

                    b.Property<string>("Participants")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("participant");

                    b.Property<string>("Periode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Periode");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("formationTermine", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Image", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_Image");

                    b.Property<string>("CheminImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("chemin_image");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("date")
                        .HasColumnName("date_creation");

                    b.Property<string>("ExtensionImage")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("jpg")
                        .HasColumnName("extension_image");

                    b.Property<string>("HauteurImage")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("455")
                        .HasColumnName("hauteur_image");

                    b.Property<string>("LargeurImage")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("255")
                        .HasColumnName("largeur_image");

                    b.Property<string>("NomImage")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nom_image");

                    b.Property<string>("TailleImage")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("256")
                        .HasColumnName("taille_image");

                    b.Property<string>("TypeImage")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("type_image");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("image_", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Message", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_Message");

                    b.Property<DateTime>("DateMessage")
                        .HasColumnType("date")
                        .HasColumnName("date_message");

                    b.Property<string>("DescriptionMessage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description_message");

                    b.Property<string>("IdUser")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ObjetMessage")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("objet_message");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("IdUser");

                    b.ToTable("message", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Metier", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Id_Metier");

                    b.Property<string>("DescriptionMetier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Decription_Metier");

                    b.Property<string>("NameImageMetier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Name_Image_Metier");

                    b.Property<string>("TitleMetier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Title_Metier");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("metier", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Newsletter", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_newsletter");

                    b.Property<string>("CheminMediaNewsletter")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("chemin_media_newsletter");

                    b.Property<string>("DescriptionNewsletter")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("description_newsletter");

                    b.Property<string>("NomNewsletter")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nom_newsletter");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("newsletter", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Partenaire", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_partenaire");

                    b.Property<string>("CheminImageTemoignage")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("chemin_image__temoignage");

                    b.Property<string>("NomPartenaire")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nom_partenaire");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("partenaire", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.PostulerAnnonceRecrutement", b =>
                {
                    b.Property<string>("AnnonceRecrutementsId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UsersId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DateEnvoiPostulerAnnonceRecrutement")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdAnnonceRecrutement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdPostulerAnnonceRecrutement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MessagePostulerAnnonceRecrutement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AnnonceRecrutementsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("PostulerAnnonceRecrutements");
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.ProjetAVenir", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_projet_A_venir");

                    b.Property<string>("Idee")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Idee");

                    b.Property<string>("cheminImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CheminImage");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("projet_a_venir", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.ProjetEnCour", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_projet_En_cours");

                    b.Property<string>("CheminImageProjetEnCours")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("chemin_image_projet_En_cours");

                    b.Property<DateTime>("DateDebutProjetEnCours")
                        .HasColumnType("date")
                        .HasColumnName("date_debut_projet_En_cours");

                    b.Property<DateTime>("DateFinProjetEnCours")
                        .HasColumnType("date")
                        .HasColumnName("date_fin_projet_En_cours");

                    b.Property<string>("DureeProjetEnCours")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("duree_projet_En_cours");

                    b.Property<string>("NomImageProjetEnCours")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nom_image_projet_En_cours");

                    b.Property<string>("NomProjetEnCours")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nom_projet_En_cours");

                    b.Property<string>("ObjectifResultatRealise")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("objectif_resultat_realise");

                    b.Property<string>("ResumeDuProjetEnCours")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("resume_du_projet_en_cours");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("projet_en_cours", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.ProjetRealise", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_projet_realise");

                    b.Property<string>("Annee")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("Annee");

                    b.Property<string>("ChemImageProjetRealise")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cheminImage");

                    b.Property<string>("Donneur_Ordre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Donneur_Ordre");

                    b.Property<string>("Duree")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Duree");

                    b.Property<string>("Intitule_Projet")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Intitule_Projet");

                    b.Property<string>("TacheExecute")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TacheExecute");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("projet_realises", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Recommandation", b =>
                {
                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.ToTable("recommandation", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Stage", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_Stage");

                    b.Property<string>("DomaineStage")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("domaine_stage");

                    b.Property<string>("IdTypeStage")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("IdTypeStage");

                    b.ToTable("stage", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Telecharger", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Avis")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateTelechargement")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EbooksId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdEbook")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsersId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("idUser")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EbooksId");

                    b.HasIndex("UsersId");

                    b.ToTable("Telechargers");
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Temoignage", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_temoignage");

                    b.Property<string>("CheminImageTemoignage")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("chemin_image_temoignage");

                    b.Property<string>("DescriptionTemoignage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description_temoignage");

                    b.Property<string>("NomTemoignage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nom_temoignage");

                    b.Property<string>("RoleTemoignage")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("ddee")
                        .HasColumnName("role_temoignage");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("temoignage", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.TypeEmploi", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_TypeEmploi");

                    b.Property<string>("LibelleTypeEmploi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Libelelle_TypeEmploi");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("TypeEmploi", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.TypeStage", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_TypeStage");

                    b.Property<string>("LibelleTypeStage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Libelelle_TypeStage");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("TypeStage", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("civilite")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.UserNewsletter", b =>
                {
                    b.Property<string>("EmailUser")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Email_User");

                    b.HasKey("EmailUser")
                        .HasName("PRIMARY");

                    b.ToTable("UserNewsletter", (string)null);
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.UserToNewsLetter", b =>
                {
                    b.Property<string>("NewslettersId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserNewslettersEmailUser")
                        .HasColumnType("varchar(25)");

                    b.HasKey("NewslettersId", "UserNewslettersEmailUser");

                    b.HasIndex("UserNewslettersEmailUser");

                    b.ToTable("UserToNewsLetters");
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Video", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_Video");

                    b.Property<string>("CheminVideo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("chemin_video");

                    b.Property<DateTime>("DateCreationVideo")
                        .HasColumnType("date")
                        .HasColumnName("date_creation_video");

                    b.Property<string>("ExtensionVideo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("extension_video");

                    b.Property<string>("NomVideo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nom_video");

                    b.Property<string>("TailleVideo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("taille_video");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("video", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("bds_site_web_version7_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("bds_site_web_version7_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bds_site_web_version7_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("bds_site_web_version7_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Consulter", b =>
                {
                    b.HasOne("bds_site_web_version7_.Models.Ebook", null)
                        .WithMany()
                        .HasForeignKey("EbooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bds_site_web_version7_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.DemandeEmploi", b =>
                {
                    b.HasOne("bds_site_web_version7_.Models.Emploi", null)
                        .WithMany()
                        .HasForeignKey("EmploiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bds_site_web_version7_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.DemandeStage", b =>
                {
                    b.HasOne("bds_site_web_version7_.Models.Stage", null)
                        .WithMany()
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bds_site_web_version7_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Emploi", b =>
                {
                    b.HasOne("bds_site_web_version7_.Models.TypeEmploi", "typeEmploi")
                        .WithMany("Emplois")
                        .HasForeignKey("IdTypeEmploi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("typeEmploi");
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Message", b =>
                {
                    b.HasOne("bds_site_web_version7_.Models.User", "user")
                        .WithMany("Messages")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.PostulerAnnonceRecrutement", b =>
                {
                    b.HasOne("bds_site_web_version7_.Models.AnnonceRecrutement", null)
                        .WithMany()
                        .HasForeignKey("AnnonceRecrutementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bds_site_web_version7_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Stage", b =>
                {
                    b.HasOne("bds_site_web_version7_.Models.TypeStage", "typestage")
                        .WithMany("Stages")
                        .HasForeignKey("IdTypeStage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("typestage");
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.Telecharger", b =>
                {
                    b.HasOne("bds_site_web_version7_.Models.Ebook", null)
                        .WithMany()
                        .HasForeignKey("EbooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bds_site_web_version7_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.UserToNewsLetter", b =>
                {
                    b.HasOne("bds_site_web_version7_.Models.Newsletter", null)
                        .WithMany()
                        .HasForeignKey("NewslettersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bds_site_web_version7_.Models.UserNewsletter", null)
                        .WithMany()
                        .HasForeignKey("UserNewslettersEmailUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.TypeEmploi", b =>
                {
                    b.Navigation("Emplois");
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.TypeStage", b =>
                {
                    b.Navigation("Stages");
                });

            modelBuilder.Entity("bds_site_web_version7_.Models.User", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
